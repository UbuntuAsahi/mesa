# Rules for changes that impact either freedreno or turnip.
.freedreno-common-rules:
  rules:
    - !reference [.no_scheduled_pipelines-rules, rules]
    - !reference [.freedreno-farm-rules, rules]
    - changes: &freedreno_core_file_list
      - src/freedreno/ci/**/*
      - src/freedreno/common/**/*
      - src/freedreno/drm/**/*
      - src/freedreno/fdl/**/*
      - src/freedreno/ir3/**/*
      - src/freedreno/isa/**/*
      - src/freedreno/registers/**/*
      when: on_success

.freedreno-common-manual-rules:
  retry: !reference [.scheduled_pipeline-rules, retry]
  rules:
    - !reference [.freedreno-farm-manual-rules, rules]
    - !reference [.core-manual-rules, rules]
    - changes:
        *freedreno_core_file_list
      when: manual

.freedreno-rules:
  stage: freedreno
  rules:
    - !reference [.freedreno-common-rules, rules]
    - !reference [.gl-rules, rules]
    - changes: &freedreno_gl_file_list
      - src/freedreno/ir2/**/*
      - src/gallium/drivers/freedreno/**/*
      - src/gallium/winsys/freedreno/**/*
      when: on_success

.freedreno-manual-rules:
  stage: freedreno
  retry: !reference [.scheduled_pipeline-rules, retry]
  rules:
    - !reference [.freedreno-common-manual-rules, rules]
    - !reference [.gl-manual-rules, rules]
    - changes:
        *freedreno_gl_file_list
      when: manual

.turnip-rules:
  stage: freedreno
  rules:
    - !reference [.freedreno-common-rules, rules]
    - !reference [.vulkan-rules, rules]
    - changes: &freedreno_vulkan_file_list
      - src/freedreno/vulkan/**/*
      when: on_success

.turnip-manual-rules:
  stage: freedreno
  retry: !reference [.scheduled_pipeline-rules, retry]
  rules:
    - !reference [.freedreno-common-manual-rules, rules]
    - !reference [.vulkan-manual-rules, rules]
    - changes:
        *freedreno_vulkan_file_list
      when: manual

# For piglit and skqp test jobs that run both GL and VK tests.
.freedreno-turnip-rules:
  rules:
    - !reference [.freedreno-rules, rules]
    - !reference [.turnip-rules, rules]

.freedreno-rules-restricted:
  stage: freedreno
  rules:
    - !reference [.restricted-rules, rules]
    - !reference [.freedreno-rules, rules]

.freedreno-rules-performance:
  stage: freedreno
  retry: !reference [.scheduled_pipeline-rules, retry]
  rules:
    - !reference [.performance-rules, rules]
    - !reference [.freedreno-manual-rules, rules]
  allow_failure: true # see comment in .performance-rules, which we don't inherit this line from.
  variables:
    LAVA_JOB_PRIORITY: 40
    # Ensure that we are using the release build artifact
    S3_ARTIFACT_NAME: mesa-arm64-default-release
  needs:
    - debian/arm64_test
    - debian-arm64-release
  dependencies: null


.google-freedreno-test:
  extends:
    - .baremetal-test-arm64
    - .freedreno-rules
  variables:
    VK_DRIVER: freedreno
    FLAKES_CHANNEL: "#freedreno-ci"
    PIGLIT_PLATFORM: mixed_glx_egl
    BM_CMDLINE: "ip=dhcp console=ttyMSM0,115200n8 $BM_KERNEL_EXTRA_ARGS root=/dev/nfs rw nfsrootdebug nfsroot=,tcp,nfsvers=4.2 init=/init $BM_KERNELARGS"
  script:
    - ./install/bare-metal/fastboot.sh
  tags:
    - google-freedreno-db410c

.baremetal-deqp-test-freedreno-vk:
  extends:
    - .baremetal-deqp-test
  variables:
    DEQP_VER: vk
    # Increase the hangcheck timer for our spilling tests which bump up against
    # the .5s default.
    FREEDRENO_HANGCHECK_MS: 2000

.google-freedreno-test-traces:
  extends:
    - .piglit-traces-test
  variables:
    HWCI_TEST_SCRIPT: "/install/piglit/piglit-traces.sh"
    HWCI_START_XORG: 1
    PIGLIT_REPLAY_DESCRIPTION_FILE: "/install/traces-freedreno.yml"
  artifacts:
    reports:
      junit: results/junit.xml

.a306-test:
  extends:
    - .google-freedreno-test
  variables:
    BM_KERNEL: Image.gz
    BM_DTB: apq8016-sbc
    GPU_VERSION: freedreno-a307

a306_gl:
  extends:
    - .baremetal-deqp-test
    - .a306-test
  variables:
    DEQP_SUITE: freedreno-a307
    FDO_CI_CONCURRENT: 6
  parallel: 5

# New jobs. Leave it as manual for now.
.a306_piglit:
  extends:
    - .piglit-test
    - .a306-test
    - .freedreno-manual-rules
  variables:
    HWCI_START_XORG: 1

# Something happened and now this hangchecks and doesn't recover.  Unkown when
# it started.
.a306_piglit_gl:
  extends:
    - .a306_piglit
  variables:
    PIGLIT_PROFILES: quick_gl
    BM_KERNEL_EXTRA_ARGS: "msm.num_hw_submissions=1"
    FDO_CI_CONCURRENT: 3

a306_piglit_shader:
  extends:
    - .a306_piglit
  variables:
    PIGLIT_PROFILES: quick_shader
    FDO_CI_CONCURRENT: 6

a306-traces:
  extends:
    - .google-freedreno-test-traces
    - .a306-test
  variables:
    PIGLIT_REPLAY_DEVICE_NAME: "freedreno-a306"
    PIGLIT_RESULTS: "freedreno-a306-replay"

# 8 devices (2023-04-15)
.a530-test:
  extends:
    - .google-freedreno-test
  variables:
    BM_KERNEL: Image.gz
    BM_DTB: apq8096-db820c
    GPU_VERSION: freedreno-a530
  tags:
    - google-freedreno-db820c

a530_gl:
  extends:
    - .baremetal-deqp-test
    - .a530-test
  variables:
    DEQP_SUITE: freedreno-a530
    PIGLIT_PLATFORM: gbm
    FDO_CI_CONCURRENT: 3  # if 4, sometimes "deqp-gles31, not enough memory for the allocation" appears
  parallel: 6

# piglit and piglit_gl since it takes a bit under 20 minutes and has a lot of flakes, so
# leave it as manual.  The shader_tests are in the main a530_gl suite.
#
# Disabled for now because something reliably takes out the board 19-20 minutes in,
# and then it reboots and tries again until the job timeout.
.a530_piglit:
  extends:
    - .baremetal-deqp-test
    - .a530-test
  parallel: 2
  variables:
    DEQP_SUITE: freedreno-a530-piglit
    HWCI_START_WESTON: 1

.a530_piglit_gl:
  extends:
    - .a530_piglit
    - .freedreno-manual-rules
  parallel: null
  variables:
    PIGLIT_PROFILES: quick_gl

a530-traces:
  extends:
    - .google-freedreno-test-traces
    - .a530-test
  variables:
    PIGLIT_REPLAY_DEVICE_NAME: "freedreno-a530"
    PIGLIT_RESULTS: "freedreno-a530-replay"

.a618-test:
  extends:
    .lava-test:arm64
  variables:
    FLAKES_CHANNEL: "#freedreno-ci"
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
    # Increase the hangcheck timer for our spilling tests which bump up against
    # the .5s default.
    FREEDRENO_HANGCHECK_MS: 2000
    GPU_VERSION: freedreno-a618
    VK_DRIVER: freedreno

.a618-test-kingoftown-r1:
  extends:
    - .a618-test
  variables:
    DEVICE_TYPE: sc7180-trogdor-kingoftown
    DTB: sc7180-trogdor-kingoftown-r1
    RUNNER_TAG: mesa-ci-x86-64-lava-sc7180-trogdor-kingoftown

.a618-test-limozeen-nots-r5:
  extends:
    - .a618-test
  variables:
    DEVICE_TYPE: sc7180-trogdor-lazor-limozeen
    DTB: sc7180-trogdor-lazor-limozeen-nots-r5
    RUNNER_TAG: mesa-ci-x86-64-lava-sc7180-trogdor-lazor-limozeen

a618_vk:
  extends:
    - .lava-test-deqp:arm64
    - .a618-test-kingoftown-r1
    - .turnip-rules
  parallel: 12
  variables:
    DEQP_SUITE: freedreno-a618-vk
    MESA_VK_IGNORE_CONFORMANCE_WARNING: 1

a618_vk_full:
  extends:
    - a618_vk
    - .turnip-manual-rules
  # We use a longer timeout to keep the parallel down so that we don't lock up
  # too many runners for a long time when a dev is trying out at full VK status.
  timeout: 4h
  parallel: 3
  variables:
    # ran into OOM with VK-GL-CTS 1.2.8.0 at 6
    FDO_CI_CONCURRENT: 4
    DEQP_SUITE: freedreno-a618-vk-full
    JOB_TIMEOUT: 180
    TEST_PHASE_TIMEOUT: 180

a618_gl:
  extends:
    - .lava-test-deqp:arm64
    - .a618-test-limozeen-nots-r5
    - .freedreno-rules
  parallel: 4
  variables:
    DEQP_SUITE: freedreno-a618

# Run dEQP EGL window system tests separately with the window systems available.
# X11 takes over the screen, wayland is run headless.
.a618_egl:  # FIXME disabled due to device outage
  extends:
    - .lava-test-deqp:arm64
    - .a618-test-limozeen-nots-r5
    - .freedreno-rules
  variables:
    DEQP_VER: egl
    HWCI_START_XORG: 1
    HWCI_START_WESTON: 1
    DEQP_SUITE: freedreno-a618-egl

.a618_skqp:  # FIXME disabled due to device outage
  extends:
    - .lava-test-deqp:arm64
    - .a618-test-limozeen-nots-r5
    - .freedreno-rules
    # SKQP tests both the GL and VK drivers.
    - .freedreno-turnip-rules
  variables:
    HWCI_START_XORG: 1
    DEQP_SUITE: freedreno-a618-skqp

.a618_piglit_gles2:  # FIXME disabled due to device outage
  extends:
    - .piglit-test
    - .lava-piglit:arm64
    - .a618-test-limozeen-nots-r5
    - .freedreno-rules
    # Note that piglit has GL+VK integration testing.
    - .freedreno-turnip-rules
  variables:
    HWCI_START_WESTON: 1
    DEQP_VER: gles2
    PIGLIT_PROFILES: gpu

a618-traces:
  extends:
    - .lava-piglit-traces:arm64
    - .a618-test-limozeen-nots-r5
    - .freedreno-rules
  variables:
    HWCI_START_WESTON: 1
    # So we aren't capped by VSync by the X server
    EGL_PLATFORM: surfaceless
    FDO_CI_CONCURRENT: 5  # 6 is too much leading to OOM
    PIGLIT_REPLAY_DEVICE_NAME: "${GPU_VERSION}"
    PIGLIT_RESULTS: "${GPU_VERSION}-replay"
    # This lets us run several more traces which don't use any features we're
    # missing.
    MESA_GLSL_VERSION_OVERRIDE: "460"
    MESA_GL_VERSION_OVERRIDE: "4.6"
    PIGLIT_REPLAY_DESCRIPTION_FILE: "/install/traces-freedreno.yml"

a618-traces-performance:
  extends:
    - a618-traces
    - .piglit-performance:arm64
    - .freedreno-rules-performance
  variables:
    # Always use the same device
    # a618 tag starts with cbg-1 (not cbg-0) for some reason
    LAVA_TAGS: "cbg-1"
  needs:
    - !reference [a618-traces, needs]
    - !reference [.piglit-performance:arm64, needs]

.lava-sm8350-hdk:
  variables:
    BOOT_METHOD: fastboot
    KERNEL_IMAGE_NAME: "Image.gz"
    KERNEL_IMAGE_TYPE: ""
    # Increase the hangcheck timer for our spilling tests which bump up against
    # the .5s default.
    FREEDRENO_HANGCHECK_MS: 2000
    DEVICE_TYPE: sm8350-hdk
    DTB: sm8350-hdk
    GPU_VERSION: freedreno-a660
    RUNNER_TAG: mesa-ci-x86-64-lava-sm8350-hdk

a660_gl:
  extends:
    - .lava-test-deqp:arm64
    - .freedreno-rules
    - .lava-sm8350-hdk
  parallel: 2
  variables:
    DEQP_SUITE: freedreno-a660

# 6 devices (2023-07-06)
.a630-test:
  extends:
    - .google-freedreno-test
  variables:
    FDO_CI_CONCURRENT: 10
    BM_KERNEL: cheza-kernel
    BM_CMDLINE: "ip=dhcp console=ttyMSM0,115200n8 root=/dev/nfs rw nfsrootdebug nfsroot=,tcp,nfsvers=4.2 init=/init"
    GPU_VERSION: freedreno-a630
  tags:
    - google-freedreno-cheza
  script:
    - ./install/bare-metal/cros-servo.sh

.a630-full:
  tags:
    - google-freedreno-cheza-long

a630_gl:
  extends:
    - .baremetal-deqp-test
    - .a630-test
  parallel: 4
  variables:
    DEQP_SUITE: freedreno-a630

# Run dEQP EGL window system tests separately with the window systems available.
# X11 takes over the screen, wayland is run headless.
a630_egl:
  extends:
    - .baremetal-deqp-test
    - .a630-test
  variables:
    DEQP_VER: egl
    HWCI_START_XORG: 1
    HWCI_START_WESTON: 1
    DEQP_SUITE: freedreno-a630-egl

a630_gles_asan:
  extends:
    - .baremetal-deqp-test
    - .a630-test
    - .baremetal-arm64-asan-test
  variables:
    DEQP_VER: gles31
    DEQP_FRACTION: 100
    DEQP_EXPECTED_RENDERER: FD630
    FDO_CI_CONCURRENT: 2 # We get OOMkills if we go too wide with asan enabled
    GPU_VERSION: freedreno-a630-asan

a630_skqp:
  extends:
    - .baremetal-deqp-test
    - .a630-test
    # SKQP tests both the GL and VK drivers.
    - .freedreno-turnip-rules
  variables:
    HWCI_START_WESTON: 1
    DEQP_SUITE: freedreno-a630-skqp

a630_vk:
  extends:
    - .a630-test
    - .baremetal-deqp-test-freedreno-vk
    - .turnip-rules
  variables:
    DEQP_SUITE: freedreno-a630-vk

a630_vk_full:
  # We use a longer timeout (3 hour job) to keep the parallel down so that we
  # don't lock up too many runners for a long time when a dev is testing full VK
  # status.  The full runs are restricted to just 2 runners to keep from
  # blocking up normal merges, so going more parallel doesn't make any sense.
  timeout: 3h
  extends:
    - a630_vk
    - .a630-full
    - .turnip-manual-rules
  parallel: 2
  variables:
    DEQP_SUITE: freedreno-a630-vk-full
    TEST_PHASE_TIMEOUT: 180

a630_vk_asan:
  extends:
    - .a630-test
    - .baremetal-deqp-test-freedreno-vk
    - .baremetal-arm64-asan-test
    - .turnip-rules
  variables:
    DEQP_SUITE: freedreno-a630-vk-asan
    FDO_CI_CONCURRENT: 2 # We get OOMkills if we go too wide with asan enabled
    GPU_VERSION: freedreno-a630-asan

a630_piglit:
  extends:
    - .baremetal-deqp-test
    - .a630-test
    # Note that piglit has GL+VK integration testing.
    - .freedreno-turnip-rules
  variables:
    HWCI_START_WESTON: 1
    DEQP_SUITE: freedreno-a630-piglit

a630-traces:
  extends:
    - .google-freedreno-test-traces
    - .a630-test
  variables:
    PIGLIT_REPLAY_DEVICE_NAME: "freedreno-a630"
    PIGLIT_RESULTS: "freedreno-a630-replay"
    # This lets us run several more traces which don't use any features we're
    # missing.
    MESA_GLSL_VERSION_OVERRIDE: "460"
    MESA_GL_VERSION_OVERRIDE: "4.6"
    PIGLIT_REPLAY_EXTRA_ARGS: "--download-caching-proxy-url=http://10.42.0.1:8888/cache/?uri="

a630-traces-restricted:
  extends:
    - a630-traces
    - .freedreno-rules-restricted
  variables:
    PIGLIT_REPLAY_DESCRIPTION_FILE: "/install/restricted-traces-freedreno.yml"
    PIGLIT_REPLAY_EXTRA_ARGS: "--download-caching-proxy-url=http://10.42.0.1:8888/cache/?uri= --keep-image --db-path ${CI_PROJECT_DIR}/replayer-db/ --minio_bucket=mesa-tracie-private --jwt-file=${CI_JOB_JWT_FILE}"
  allow_failure: true

a630-traces-performance:
  extends:
    - a630-traces
    - .freedreno-rules-performance
  variables:
    PIGLIT_REPLAY_SUBCOMMAND: "profile"
    PIGLIT_REPLAY_EXTRA_ARGS: "--download-caching-proxy-url=http://10.42.0.1:8888/cache/?uri= --db-path ${CI_PROJECT_DIR}/replayer-db/"
    # More than this can hit OOM due to BOs leaked during the replay of the last frame
    PIGLIT_REPLAY_LOOP_TIMES: 150
    # We don't want for more than one workload to be submitted to the GPU at a time
    FDO_CI_CONCURRENT: 1
    # Piglit is very sparse in its status output and downloads of big traces can take a while
    LAVA_DEVICE_HANGING_TIMEOUT_SEC: 600
    # So we aren't capped by VSync by the X server
    EGL_PLATFORM: surfaceless
    GIT_STRATEGY: none
    HWCI_FREQ_MAX: "true"
